services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: s1coder_website
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env.local
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
    command: bun run dev
    depends_on:
      - db
      - redis

  db:
    image: postgres:17-alpine
    container_name: s1coder_postgres
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-app_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: s1coder_redis
    ports:
      - "6779:6379"
    volumes:
      - redis_data:/data
    restart: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:
    name: s1coder_postgres_data
  redis_data:
    name: s1coder_redis_data
